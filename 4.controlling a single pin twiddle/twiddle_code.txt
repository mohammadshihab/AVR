// ------- Preamble -------- // 
#include <avr/io.h>                        /* Defines pins, ports, etc */ 
#include <util/delay.h>                     /* Functions to waste time */
#define DELAYTIME 85                                   /* milliseconds */ 
#define LED_PORT                PORTB 
#define LED_PIN                 PINB 
#define LED_DDR                 DDRB
int main(void) {
	// -------- Inits --------- //  
	uint8_t i;  
	LED_DDR = 0xff;               /* Data Direction Register B:                                   
	all set up for output */
	// ------ Event loop ------ //  
	while (1) {
	LED_PORT = (1 << 2);     // here only one single pin (2nd) is selected (as output) while all other of the regester is out of count  
	  }                                                  /* End event loop */  
	   return (0); 
	   }











//error
// ------- Preamble -------- // 
#include <avr/io.h>                        /* Defines pins, ports, etc */ 
#include <util/delay.h>                     /* Functions to waste time */
#define DELAYTIME 85                                   /* milliseconds */ 
#define LED_PORT                PORTB 
#define LED_PIN                 PINB 
#define LED_DDR                 DDRB
int main(void) {
	// -------- Inits --------- //  
	uint8_t i=0;  
	LED_DDR = 0xff;               /* Data Direction Register B:                                   
	all set up for output */
	// ------ Event loop ------ //  
	while (1) {
		LED_PORT = 0x00;
		while(i<=7){
	LED_PORT = ( 1 == i);     // here only one single pin (2nd) is selected (as output) while all other of the regester is out of count
	_delay_ms(DELAYTIME);
	i=i+1;
		}
	
	  
	  }                                                  /* End event loop */  
	   return (0); 
	   }





























//error
#include <avr/io.h>
#include <util/delay.h>
#define DELAYTIME  85   //declaring value for delaytime
#define LED_PORT   PORTB 
#define LED_DDR    DDRB
#define LED_PIN    PINB



int main (void){
	int i=0;
	LED_DDR = 0xff;
	
	while (1){
		LED_PORT = 0b11111111;
		
		while (1){
			LED_PORT = ( 0<<i );
			_delay_ms(DELAYTIME);
			i=i+1;
		}
		
	}
	return 0;

}








// swipping LED lighting up from up to down
#include <avr/io.h>
#include <util/delay.h>
#define DELAYTIME  50   //declaring value for delaytime
#define LED_PORT   PORTB 
#define LED_DDR    DDRB
#define LED_PIN    PINB



int main (void){
	int i=0;
	LED_DDR = 0xff;
	
	while (1){
		
		
		LED_PORT = (1<<i);
		_delay_ms(DELAYTIME);
		i=i+1;
		
		if (i == 8)
		{
			i=0;
		}
		
		
	}
	return 0;

}












//inverse up to down
// ~ make the output inverse
#include <avr/io.h>
#include <util/delay.h>
#define DELAYTIME  50   //declaring value for delaytime
#define LED_PORT   PORTB
#define LED_DDR    DDRB
#define LED_PIN    PINB



int main (void){
	int i=0;
	LED_DDR = 0xff;
	
	while (1){
		
		
		LED_PORT = ~(1<<i);
		_delay_ms(DELAYTIME);
		i=i+1;
		
		if (i == 8)
		{
			i=0;
		}
		
		
	}
	return 0;

}















//error
//inverse up to down
#include <avr/io.h>
#include <util/delay.h>
#define delayTime   1000;
#define ledDDR DDRB
#define ledPORT PORTB

int main(void)
{
	int i=0;
	ledDDR = 0xff;
	
    /* Replace with your application code */
    while (1) 
    {
		if (i>=7)
		{
			i=i-7;
		}
		ledPORT = (1<<i);
		if ((i+1)>=7)
		{
			i=i+1-7;
		}
		ledPORT = (1<<(i+1));
		if ((i+2)>=7)
		{
			i=i+2-7;
		}
		ledPORT = (1<<(i+2));
		if ((i+3)>=7)
		{
			i=i+3-7;
		}
		ledPORT = (1<<(i+3));
		if ((i+4)>=7)
		{
			i=i+4-7;
		}
		ledPORT = (1<<(i+4));
		if ((i+5)>=7)
		{
			i=i+5-7;
		}
		ledPORT = (0<<(i+5));
		if ((i+6)>=7)
		{
			i=i+6-7;
		}
		ledPORT = (1<<(i+6));
		if ((i+7)>=7){
			i=i+7-7;
		}
		ledPORT = (1<<(i+7));
			
    }
	return 0;
}

