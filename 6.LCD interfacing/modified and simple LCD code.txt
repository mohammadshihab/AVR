

// simple text//


#include <avr/io.h>
#include <util/delay.h>

/* regester C is selected for sending data( also command data) and
  regester B is selected for controlling three pins RS, RW and EN.
 here RS=0 for sending commnd and RS=1 for sending data */ 



void   LCD_Command ( unsigned char cmnd ){
	PORTB = cmnd;
	PORTC = 0b00000100;  /*RS=0 command reg.  ; RW=0 Write operation  ; EN=1*/
	_delay_us(1);
	PORTC = 0b00000000;   /*RS=0 command reg.  ; RW=0 Write operation  ; EN=0*/
	_delay_ms(3); 
}


void lcdChar( unsigned char  character_data ){
	DDRB = 0xff;
	DDRC = 0xff;
	PORTB = character_data;
	PORTC = 0b00000101; /* RS=1 Data reg.;  RW=0 write operation  and EN=1 */
	_delay_us(1);
	PORTC = 0b00000001; /* EN=0 */
	_delay_ms(50);
}


void lcdInit(void){
	DDRB = 0xff;
	DDRC = 0xff;
	_delay_ms(20);
	LCD_Command (0x38);		/* Initialization of 16X2 LCD in 8bit mode */
	LCD_Command (0x0C);		/* Display ON Cursor OFF */
	LCD_Command (0x06);		/* Auto Increment cursor */
	LCD_Command (0x01);		/* Clear display */
	LCD_Command (0x80);		/* Cursor at home position */
}


void lcdString( char *str){
	int i=0;
	for(i=0; str[i]!=0; i++){
		lcdChar(str[i]);
	}
	/*while(str[i]!=0){
		lcdChar(str[i]);
		if (str[i]=0)
		{
			i=0;
		}
		else{
			i=i+1;
		}
	}*/
}


void lcdClear(){
	LCD_Command(0x01);
	LCD_Command(0x80);
}



int main(){
	lcdInit();
	lcdString("is it okay...");
	LCD_Command(0xC0);
	lcdString("this is 2nd line");
	return 0;
}


















//simple text looping//
#include <avr/io.h>
#include <util/delay.h>

/* regester C is selected for sending data( also command data) and
  regester B is selected for controlling three pins RS, RW and EN.
 here RS=0 for sending commnd and RS=1 for sending data */ 



void   LCD_Command ( unsigned char cmnd ){
	PORTB = cmnd;
	PORTC = 0b00000100;  /*RS=0 command reg.  ; RW=0 Write operation  ; EN=1*/
	_delay_us(1);
	PORTC = 0b00000000;   /*RS=0 command reg.  ; RW=0 Write operation  ; EN=0*/
	_delay_ms(3); 
}


void lcdChar( unsigned char  character_data ){
	DDRB = 0xff;
	DDRC = 0xff;
	PORTB = character_data;
	PORTC = 0b00000101; /* RS=1 Data reg.;  RW=0 write operation  and EN=1 */
	_delay_us(1);
	PORTC = 0b00000001; /* EN=0 */
	_delay_ms(50);
}


void lcdInit(void){
	DDRB = 0xff;
	DDRC = 0xff;
	_delay_ms(20);
	LCD_Command (0x38);		/* Initialization of 16X2 LCD in 8bit mode */
	LCD_Command (0x0C);		/* Display ON Cursor OFF */
	LCD_Command (0x06);		/* Auto Increment cursor */
	LCD_Command (0x01);		/* Clear display */
	LCD_Command (0x80);		/* Cursor at home position */
}


void lcdString( char *str){
	int i=0;
	for(i=0; str[i]!=0; i++){
		lcdChar(str[i]);
	}
	/*while(str[i]!=0){
		lcdChar(str[i]);
		if (str[i]=0)
		{
			i=0;
		}
		else{
			i=i+1;
		}
	}*/
}


void lcdClear(){
	LCD_Command(0x01);
	LCD_Command(0x80);
}


void loopFunc(void){
	
	lcdString("is it okay...");
	LCD_Command(0xC0);
	lcdString("this is 2nd line");
	
}


int main(){
	int j;
	lcdInit();
	for(j=0; j<100; j++){
		loopFunc();
		LCD_Command (0x01);		/* Clear display */
	}
	return 0;
}
